name: CI/CD Pipeline with SonarCloud

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  # Analyse SonarQube Backend
  sonarqube-backend:
    name: SonarCloud Analysis - Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies backend
        run: npm ci
        working-directory: backend

      - name: Run tests with coverage (Backend)
        run: |
          npm test -- --coverage --watchAll=false --testResultsProcessor=jest-sonar-reporter || echo "Tests completed"
        working-directory: backend

      - name: SonarCloud Scan - Backend
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend
          # Le fichier sonar-project.properties sera utilisÃ© automatiquement

  # Analyse SonarQube Frontend
  sonarqube-frontend:
    name: SonarCloud Analysis - Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/client/package-lock.json

      - name: Install dependencies frontend
        run: npm ci
        working-directory: frontend/client

      - name: Run tests with coverage (Frontend)
        run: |
          npm test -- --coverage --watchAll=false --testResultsProcessor=jest-sonar-reporter || echo "Tests completed"
        working-directory: frontend/client

      - name: Build frontend
        run: npm run build
        working-directory: frontend/client

      - name: SonarCloud Scan - Frontend
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: frontend/client
          # Le fichier sonar-project.properties sera utilisÃ© automatiquement

  # Build Docker Images
  build-backend:
    name: Build & Push Backend
    runs-on: ubuntu-latest
    needs: [sonarqube-backend]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/taskmanager-backend:latest

  build-frontend:
    name: Build & Push Frontend
    runs-on: ubuntu-latest
    needs: [sonarqube-frontend]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend/client
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/taskmanager-frontend:latest

  # Rapport final
  report:
    name: Pipeline Report
    runs-on: ubuntu-latest
    needs: [sonarqube-backend, sonarqube-frontend, build-backend, build-frontend]
    if: always()
    steps:
      - name: Display results
        run: |
          echo "ðŸŽ‰ PIPELINE COMPLETED"
          echo "===================="
          echo "Backend Analysis: ${{ needs.sonarqube-backend.result }}"
          echo "Frontend Analysis: ${{ needs.sonarqube-frontend.result }}"
          echo "Backend Build: ${{ needs.build-backend.result }}"
          echo "Frontend Build: ${{ needs.build-frontend.result }}"
          echo ""
          echo "ðŸ“Š View reports on: https://sonarcloud.io"